name: $(Build.SourceBranchName)_$(Build.Reason)

pr:
  branches:
    include:    
    - dev

trigger:
  branches:
    include:
    - dev

jobs:
- job: Default
  timeoutInMinutes: "90"
  pool:
    name: '1ES-Hosted-AzFunc'
    demands:
      - ImageOverride -equals MMS2022TLS
  steps:
- pwsh: |
      mkdir $(Build.Repository.LocalPath)\artifacts
      mkdir $(Build.Repository.LocalPath)\artifacts\ToSign\Authenticode
      mkdir $(Build.Repository.LocalPath)\artifacts\ToSign\ThirdParty
      Invoke-WebRequest -Uri "https://nasoniwinconsum89a4.blob.core.windows.net/public/sign/ThirdSign.zip" -OutFile '$(Build.Repository.LocalPath)\artifacts\ThirdSign.zip'
      Invoke-WebRequest -Uri "https://nasoniwinconsum89a4.blob.core.windows.net/public/sign/toSign.zip" -OutFile '$(Build.Repository.LocalPath)\artifacts\sign.zip'
      Expand-Archive -LiteralPath '$(Build.Repository.LocalPath)\artifacts\sign.zip' -DestinationPath '$(Build.Repository.LocalPath)\artifacts\ToSign\Authenticode'
      Expand-Archive -LiteralPath '$(Build.Repository.LocalPath)\artifacts\ThirdSign.zip' -DestinationPath '$(Build.Repository.LocalPath)\artifacts\ToSign\ThirdParty'
    displayName: 'download artifacts'
  - task: EsrpCodeSigning@1
    displayName: 'Authenticode signing'
    inputs:
      ConnectedServiceName: 'ESRP Service'
      FolderPath: '$(Build.Repository.LocalPath)\artifacts\ToSign\Authenticode\'
      Pattern: '*.dll, *.exe'
      signConfigType: 'inlineSignParams'
      inlineOperation: |
        [
            {
              "KeyCode": "CP-230012",
              "OperationCode": "SigntoolSign",
              "Parameters": {
                "OpusName": "Microsoft",
                "OpusInfo": "http://www.microsoft.com",
                "FileDigest": "/fd \"SHA256\"",
                "PageHash": "/NPH",
                "TimeStamp": "/tr \"http://rfc3161.gtm.corp.microsoft.com/TSS/HttpTspServer\" /td sha256"
              },
              "ToolName": "sign",
              "ToolVersion": "1.0"
            },
            {
              "KeyCode": "CP-230012",
              "OperationCode": "SigntoolVerify",
              "Parameters": {},
              "ToolName": "sign",
              "ToolVersion": "1.0"
            }
        ]
      SessionTimeout: '60'
      MaxConcurrency: '50'
      MaxRetryAttempts: '5'
    condition: and(succeeded(), eq(variables['IsReleaseBuild'], 'true'))
  - task: EsrpCodeSigning@1
    displayName: 'Third party signing'
    inputs:
      ConnectedServiceName: 'ESRP Service'
      FolderPath: '$(Build.Repository.LocalPath)\artifacts\ToSign\ThirdParty\'
      Pattern: '*.dll, *.exe'
      signConfigType: 'inlineSignParams'
      inlineOperation: |
        [
          {
              "KeyCode": "CP-231522",
              "OperationCode": "SigntoolSign",
              "Parameters": {
                  "OpusName": "Microsoft",
                  "OpusInfo": "http://www.microsoft.com",
                  "Append": "/as",
                  "FileDigest": "/fd \"SHA256\"",
                  "PageHash": "/NPH",
                  "TimeStamp": "/tr \"http://rfc3161.gtm.corp.microsoft.com/TSS/HttpTspServer\" /td sha256"
              },
              "ToolName": "sign",
              "ToolVersion": "1.0"
          },
          {
              "KeyCode": "CP-231522",
              "OperationCode": "SigntoolVerify",
              "Parameters": {},
              "ToolName": "sign",
              "ToolVersion": "1.0"
          }
        ]
      SessionTimeout: '60'
      MaxConcurrency: '50'
      MaxRetryAttempts: '5'
    condition: and(succeeded(), eq(variables['IsReleaseBuild'], 'true'))
  - pwsh: |
      $compress = @{
        Path = "$(Build.Repository.LocalPath)\artifacts\ToSign\Authenticode"
        CompressionLevel = "Fastest"
        DestinationPath = "$(Build.ArtifactStagingDirectory)\Authenticode.Zip"
      }
      Compress-Archive @compress

      $compress = @{
        Path = "$(Build.Repository.LocalPath)\artifacts\ToSign\ThirdParty"
        CompressionLevel = "Fastest"
        DestinationPath = "$(Build.ArtifactStagingDirectory)\ThirdParty.Zip"
      }
      Compress-Archive @compress
    env:
      IntegrationBuildNumber: $(INTEGRATIONBUILDNUMBER)
    displayName: 'Move artifacts'
  - task: PublishPipelineArtifact@1
    inputs:
      targetPath: '$(Build.ArtifactStagingDirectory)'
      artifactName: 'drop'
      artifactType: 'pipeline'