// Copyright (c) .NET Foundation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.

namespace Microsoft.Azure.WebJobs.Host.Bindings
{
    /// <summary>
    /// An enumeration of binding order values. These values are used by <see cref="IOrderedValueBinder"/>
    /// when determining which order to bind function out parameters (see there for details).
    /// </summary>
    public enum BindStepOrder
    {
        /// <summary>
        /// Default bind order (i.e. parameter declaration order).
        /// </summary>
        Default = 0,

        /// <summary>
        /// Output bindings with this BindStepOrder value will be bound at a later stage;
        /// Input bindings will be bound in normal order.
        /// This is used, for example, when enqueueing a message that references entities generated by other bindings.
        /// For example, consider a situation where a function has output parameters for both a blob and a queue.
        /// We want to enqueue the message AFTER the blob. That way, if the queue message has a blob path in it, there
        /// is no race condition for the message consumer.
        /// </summary>
        Enqueue = 1,

        /// <summary>
        /// Input bindings with this BindStepOrder value will be bound last;
        /// Output bindings with this BindStepOrder value will be bound first.
        /// This can be used to wrap user code as tightly as possible.
        /// An example is an Availability Test binding attribute.
        /// It measures the time taken by the user code and wants to exclude other bindings' code.
        /// It also sets up a System.Diagnostics.Activity context for user code, which should be warapped as tight as possible.
        /// </summary>
        TightFunctionWrapper = 2
    }
}
